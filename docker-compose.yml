version: '3.7'

services:
  redis:
    image: redis:7.0
    container_name: my_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redis_network

  app:
    build: .
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BROKER: kafka:9093
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - redis_network
      - kafka_network
    depends_on:
      - redis
      - postgres

  kafka-connect:
    image: debezium/connect:latest
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9093
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: /usr/share/java,/tmp
    volumes:
      - /tmp:/tmp
    networks:
      - kafka_network
    depends_on:
      - postgres
      - app

  postgres:
    image: postgres:13
    container_name: my_postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
    command: >
      -c wal_level=logical
      -c max_wal_senders=1
      -c max_replication_slots=1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - redis_network
      - kafka_network

volumes:
  redis_data:
  postgres_data:

networks:
  redis_network:
  kafka_network:
    external: true
